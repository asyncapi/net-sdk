@model V3SchemaViewModel
@inject Neuroglia.Serialization.IJsonSerializer JsonSerializer
@inject Neuroglia.AsyncApi.Generation.IJsonSchemaExampleGenerator ExampleGenerator
@{
    var schemaFormat = Model.SchemaDefinition.SchemaFormat?.Split(';', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries)[0] ?? "application/schema+json";
    switch (schemaFormat)
    {
        case "application/schema+json":
            var schema = Model.SchemaDefinition.Schema is JsonSchema jsonSchema ? jsonSchema : JsonSerializer.Deserialize<JsonSchema>(JsonSerializer.SerializeToText(Model.SchemaDefinition))!;
            var type = schema.GetJsonType()!;
            var properties = schema.GetProperties();
            var examples = Model.Examples;
            <div class="card border-0">
                <a data-bs-toggle="collapse" href="#@(Model.ParentReference)_payload" role="button" aria-expanded="false" title="@schema.GetDescription()">
                    <div class="card-header bg-transparent">
                        <i class="caret text-dark"></i>
                        <span class="font-weight-bold text-secondary">Payload</span><span class="badge bg-secondary text-light ms-2">@(type == null ? "object" : EnumHelper.Stringify(type.Value).ToLowerInvariant())</span>
                    </div>
                </a>
                @if (type == SchemaValueType.Array || type == SchemaValueType.Object)
                {
                    <div id="@(Model.ParentReference)_payload" class="card-body collapse show">
                        <div class="row">
                            <div class="col-7 p-3">
                                <partial name="v3/_V3JsonSchema" model="new V3JsonSchemaViewModel(this.Model.Document, schema)" />
                            </div>
                            <div class="col-5 bg-secondary text-light p-3 rounded-1">
                                @{
                                    var example = examples != null && examples.Any() ? examples.Last().Payload : ExampleGenerator.GenerateExample(schema);
                                    var serializationOptions = new System.Text.Json.JsonSerializerOptions();
                                    Neuroglia.Serialization.Json.JsonSerializer.DefaultOptionsConfiguration(serializationOptions);
                                    serializationOptions.WriteIndented = true;
                                    <pre class="m-0"><code>@System.Text.Json.JsonSerializer.Serialize(example, serializationOptions)</code></pre>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
            break;
        default:

            break;
    }
}